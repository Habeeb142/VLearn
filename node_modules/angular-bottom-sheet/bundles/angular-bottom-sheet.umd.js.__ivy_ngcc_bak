(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/platform-browser'), require('@angular/core'), require('@angular/platform-browser/animations'), require('@angular/animations')) :
    typeof define === 'function' && define.amd ? define('angular-bottom-sheet', ['exports', '@angular/platform-browser', '@angular/core', '@angular/platform-browser/animations', '@angular/animations'], factory) :
    (global = global || self, factory(global['angular-bottom-sheet'] = {}, global.ng.platformBrowser, global.ng.core, global.ng.platformBrowser.animations, global.ng.animations));
}(this, function (exports, platformBrowser, core, animations, animations$1) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    var SlideUpToggleAnimation = [
        animations$1.trigger('slideUpToggle', [
            animations$1.transition(':enter', [
                animations$1.style({ transform: 'translateY(100%)' }),
                animations$1.animate('200ms ease-in', animations$1.style({ transform: 'translateY(0%)' }))
            ]),
            animations$1.transition(':leave', [
                animations$1.animate('200ms ease-in', animations$1.style({ transform: 'translateY(100%)' }))
            ])
        ])
    ];

    /**
     * Component
     */
    var AngularBottomSheetComponent = /** @class */ (function () {
        function AngularBottomSheetComponent(changeDetector) {
            this.changeDetector = changeDetector;
            this.flags = {
                isBottomSheetEnabled: false
            };
        }
        AngularBottomSheetComponent.prototype.ngOnInit = function () {
            this.flags.isCloseButtonEnabled = this.options.enableCloseButton ? true : false;
            this.options.closeButtonTitle = this.options.closeButtonTitle ? this.options.closeButtonTitle : "Close";
        };
        /**
         * Opens bottom sheet component
         */
        AngularBottomSheetComponent.prototype.open = function () {
            this.flags.isBottomSheetEnabled = true;
            this.changeDetector.detectChanges();
        };
        /**
         * Closes bottom sheet component
         */
        AngularBottomSheetComponent.prototype.close = function () {
            this.flags.isBottomSheetEnabled = false;
            this.changeDetector.detectChanges();
        };
        /**
         * Toggles bottom sheet component
         */
        AngularBottomSheetComponent.prototype.toggle = function () {
            this.flags.isBottomSheetEnabled = !this.flags.isBottomSheetEnabled;
            this.changeDetector.detectChanges();
        };
        /**
         * Toggles close button
         */
        AngularBottomSheetComponent.prototype.toggleCloseButton = function () {
            this.flags.isCloseButtonEnabled = !this.flags.isCloseButtonEnabled;
            this.changeDetector.detectChanges();
        };
        /**
         * Toggles dark theme
         */
        AngularBottomSheetComponent.prototype.toggleDarkTheme = function () {
            this.options.darkTheme = !this.options.darkTheme;
            this.changeDetector.detectChanges();
        };
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AngularBottomSheetComponent.prototype, "options", void 0);
        AngularBottomSheetComponent = __decorate([
            core.Component({
                selector: 'angular-bottom-sheet',
                template: "<div class=\"bottom-sheet-bg-overlay\" *ngIf=\"flags.isBottomSheetEnabled\" (click)=\"close()\"></div>\r\n<div class=\"bottom-sheet-container\" [ngClass]=\"{'bg-dark': options?.darkTheme}\" *ngIf=\"flags.isBottomSheetEnabled\"\r\n  [style.backgroundColor]=\"options?.backgroundColor\" [style.color]=\"options?.fontColor\" [@slideUpToggle]>\r\n  <div>\r\n    <div class=\"bottom-sheet-header\" [ngClass]=\"{'bg-dark-header': options?.darkTheme}\">\r\n      <h4 class=\"title\">{{options?.title}}</h4>\r\n    </div>\r\n    <div class=\"bottom-sheet-content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n    <div class=\"bottom-sheet-footer\" [ngClass]=\"{'bg-dark-footer': options?.darkTheme}\" (click)=\"close()\" *ngIf=\"flags.isCloseButtonEnabled\">\r\n      {{options.closeButtonTitle}}\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                animations: [SlideUpToggleAnimation],
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                styles: [".bottom-sheet-bg-overlay{background:rgba(0,0,0,.32);position:absolute;top:0;bottom:0;left:0;right:0}.bottom-sheet-container{background:#fff;position:fixed;bottom:0;border-radius:8px 8px 0 0;left:50%;margin-left:-35%;width:75%;z-index:4;color:#363636;box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12);font-family:Roboto,sans-serif}.bg-dark{color:rgba(255,255,255,.9);background:#363636}.bottom-sheet-header h4.title{display:inline-block;font-weight:500;margin:0;font-size:1rem}.bottom-sheet-header{border-bottom:1px solid rgba(0,0,0,.16);padding:16px}.bg-dark-header{border-bottom:1px solid rgba(255,255,255,.16)}.bottom-sheet-footer{text-align:center;padding:16px;border-top:1px solid rgba(0,0,0,.16);background:rgba(0,0,0,.02);cursor:pointer}.bg-dark-footer{border-top:1px solid rgba(255,255,255,.16)}.bottom-sheet-content{max-height:300px;overflow-y:auto;padding:16px}::-webkit-scrollbar{width:4px}::-webkit-scrollbar-track{background:#bdbdbd}::-webkit-scrollbar-thumb{background:#888}::-webkit-scrollbar-thumb:hover{background:#5c5c5c}@media (max-width:992px){.bottom-sheet-container{width:100%;position:fixed;bottom:0;left:0;right:0;margin-left:0}}"]
            }),
            __metadata("design:paramtypes", [core.ChangeDetectorRef])
        ], AngularBottomSheetComponent);
        return AngularBottomSheetComponent;
    }());

    var TestingComponent = /** @class */ (function () {
        function TestingComponent() {
        }
        TestingComponent.prototype.ngOnInit = function () {
            this.options = {
                title: "Angular Bottom Sheet",
                enableCloseButton: true,
                darkTheme: false
            };
            this.open();
        };
        TestingComponent.prototype.toggle = function () {
            this.testing.toggle();
        };
        TestingComponent.prototype.open = function () {
            this.testing.open();
        };
        TestingComponent.prototype.close = function () {
            this.testing.close();
        };
        TestingComponent.prototype.toggleDarkTheme = function () {
            this.open();
            this.testing.toggleDarkTheme();
        };
        TestingComponent.prototype.toggleCloseButton = function () {
            this.open();
            this.testing.toggleCloseButton();
        };
        __decorate([
            core.ViewChild('test'),
            __metadata("design:type", AngularBottomSheetComponent)
        ], TestingComponent.prototype, "testing", void 0);
        TestingComponent = __decorate([
            core.Component({
                selector: 'app-root',
                template: "<div class=\"button-container\">\n  <button type=\"button\" class=\"btn btn-outline-primary  btn-sm\" (click)=\"open()\">Open</button>\n  <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" (click)=\"close()\">Close</button>\n  <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"toggle()\">Toggle</button>\n  <button type=\"button\" class=\"btn btn-outline-dark btn-sm\" (click)=\"toggleDarkTheme()\">Toggle Dark Theme</button>\n  <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"toggleCloseButton()\">Toggle Close Button</button>\n</div>\n\n<angular-bottom-sheet #test [options]=\"options\">\n  <p>What is Lorem Ipsum?</p>\n</angular-bottom-sheet>\n",
                styles: [".button-container{z-index:9999;position:absolute;background:#fff;right:0;left:0;text-align:center}.button-container button{margin:8px}"]
            }),
            __metadata("design:paramtypes", [])
        ], TestingComponent);
        return TestingComponent;
    }());

    var AngularBottomSheetModule = /** @class */ (function () {
        function AngularBottomSheetModule() {
        }
        AngularBottomSheetModule = __decorate([
            core.NgModule({
                declarations: [
                    AngularBottomSheetComponent,
                    TestingComponent,
                ],
                imports: [
                    platformBrowser.BrowserModule,
                    animations.BrowserAnimationsModule
                ],
                exports: [
                    AngularBottomSheetComponent
                ],
                providers: [],
                bootstrap: [TestingComponent]
            })
        ], AngularBottomSheetModule);
        return AngularBottomSheetModule;
    }());

    exports.AngularBottomSheetComponent = AngularBottomSheetComponent;
    exports.AngularBottomSheetModule = AngularBottomSheetModule;
    exports.ɵa = SlideUpToggleAnimation;
    exports.ɵb = TestingComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=angular-bottom-sheet.umd.js.map
