{"version":3,"file":"animation_renderer.d.ts","sources":["animation_renderer.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { ÉµAnimationEngine as AnimationEngine } from '@angular/animations/browser';\nimport { NgZone, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2 } from '@angular/core';\nexport declare class AnimationRendererFactory implements RendererFactory2 {\n    private delegate;\n    private engine;\n    private _zone;\n    private _currentId;\n    private _microtaskId;\n    private _animationCallbacksBuffer;\n    private _rendererCache;\n    private _cdRecurDepth;\n    private promise;\n    constructor(delegate: RendererFactory2, engine: AnimationEngine, _zone: NgZone);\n    createRenderer(hostElement: any, type: RendererType2): Renderer2;\n    begin(): void;\n    private _scheduleCountTask;\n    end(): void;\n    whenRenderingDone(): Promise<any>;\n}\nexport declare class BaseAnimationRenderer implements Renderer2 {\n    protected namespaceId: string;\n    delegate: Renderer2;\n    engine: AnimationEngine;\n    constructor(namespaceId: string, delegate: Renderer2, engine: AnimationEngine);\n    readonly data: {\n        [key: string]: any;\n    };\n    destroyNode: ((n: any) => void) | null;\n    destroy(): void;\n    createElement(name: string, namespace?: string | null | undefined): any;\n    createComment(value: string): any;\n    createText(value: string): any;\n    appendChild(parent: any, newChild: any): void;\n    insertBefore(parent: any, newChild: any, refChild: any): void;\n    removeChild(parent: any, oldChild: any): void;\n    selectRootElement(selectorOrNode: any, preserveContent?: boolean): any;\n    parentNode(node: any): any;\n    nextSibling(node: any): any;\n    setAttribute(el: any, name: string, value: string, namespace?: string | null | undefined): void;\n    removeAttribute(el: any, name: string, namespace?: string | null | undefined): void;\n    addClass(el: any, name: string): void;\n    removeClass(el: any, name: string): void;\n    setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2 | undefined): void;\n    removeStyle(el: any, style: string, flags?: RendererStyleFlags2 | undefined): void;\n    setProperty(el: any, name: string, value: any): void;\n    setValue(node: any, value: string): void;\n    listen(target: any, eventName: string, callback: (event: any) => boolean | void): () => void;\n    protected disableAnimations(element: any, value: boolean): void;\n}\nexport declare class AnimationRenderer extends BaseAnimationRenderer implements Renderer2 {\n    factory: AnimationRendererFactory;\n    constructor(factory: AnimationRendererFactory, namespaceId: string, delegate: Renderer2, engine: AnimationEngine);\n    setProperty(el: any, name: string, value: any): void;\n    listen(target: 'window' | 'document' | 'body' | any, eventName: string, callback: (event: any) => any): () => void;\n}\n"]}