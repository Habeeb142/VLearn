'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var core$1 = require('@angular/core');
var core = require('@ionic-native/core');

var ɵngcc0 = require('@angular/core');
var TextToSpeech = /** @class */ (function (_super) {
    tslib.__extends(TextToSpeech, _super);
    function TextToSpeech() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TextToSpeech.prototype.speak = function (textOrOptions) { return core.cordova(this, "speak", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    TextToSpeech.prototype.stop = function () { return core.cordova(this, "stop", {}, arguments); };
    TextToSpeech.pluginName = "Text To Speech";
    TextToSpeech.plugin = "cordova-plugin-tts";
    TextToSpeech.pluginRef = "TTS";
    TextToSpeech.repo = "https://github.com/vilic/cordova-plugin-tts";
    TextToSpeech.platforms = ["Android", "iOS", "Windows Phone 8"];
TextToSpeech.ɵfac = function TextToSpeech_Factory(t) { return ɵTextToSpeech_BaseFactory(t || TextToSpeech); };
TextToSpeech.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TextToSpeech, factory: function (t) { return TextToSpeech.ɵfac(t); } });
var ɵTextToSpeech_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(TextToSpeech);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextToSpeech, [{
        type: core$1.Injectable
    }], null, null); })();
    return TextToSpeech;
}(core.IonicNativePlugin));

exports.TextToSpeech = TextToSpeech;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJidW5kbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OzswQkFHTTtBQUNOO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG52YXIgdHNsaWIgPSByZXF1aXJlKCd0c2xpYicpO1xudmFyIGNvcmUkMSA9IHJlcXVpcmUoJ0Bhbmd1bGFyL2NvcmUnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnQGlvbmljLW5hdGl2ZS9jb3JlJyk7XG5cbnZhciBUZXh0VG9TcGVlY2ggPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgdHNsaWIuX19leHRlbmRzKFRleHRUb1NwZWVjaCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBUZXh0VG9TcGVlY2goKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgVGV4dFRvU3BlZWNoLnByb3RvdHlwZS5zcGVhayA9IGZ1bmN0aW9uICh0ZXh0T3JPcHRpb25zKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJzcGVha1wiLCB7IFwic3VjY2Vzc0luZGV4XCI6IDEsIFwiZXJyb3JJbmRleFwiOiAyIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgVGV4dFRvU3BlZWNoLnByb3RvdHlwZS5zdG9wID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic3RvcFwiLCB7fSwgYXJndW1lbnRzKTsgfTtcbiAgICBUZXh0VG9TcGVlY2gucGx1Z2luTmFtZSA9IFwiVGV4dCBUbyBTcGVlY2hcIjtcbiAgICBUZXh0VG9TcGVlY2gucGx1Z2luID0gXCJjb3Jkb3ZhLXBsdWdpbi10dHNcIjtcbiAgICBUZXh0VG9TcGVlY2gucGx1Z2luUmVmID0gXCJUVFNcIjtcbiAgICBUZXh0VG9TcGVlY2gucmVwbyA9IFwiaHR0cHM6Ly9naXRodWIuY29tL3ZpbGljL2NvcmRvdmEtcGx1Z2luLXR0c1wiO1xuICAgIFRleHRUb1NwZWVjaC5wbGF0Zm9ybXMgPSBbXCJBbmRyb2lkXCIsIFwiaU9TXCIsIFwiV2luZG93cyBQaG9uZSA4XCJdO1xuICAgIFRleHRUb1NwZWVjaC5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IGNvcmUkMS5JbmplY3RhYmxlIH1cbiAgICBdO1xuICAgIHJldHVybiBUZXh0VG9TcGVlY2g7XG59KGNvcmUuSW9uaWNOYXRpdmVQbHVnaW4pKTtcblxuZXhwb3J0cy5UZXh0VG9TcGVlY2ggPSBUZXh0VG9TcGVlY2g7XG4iXX0=